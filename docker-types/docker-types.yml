tosca_definitions_version: alien_dsl_1_2_0

template_name: docker-types
template_author: Fastconnect
template_version: 1.2.0-SNAPSHOT

imports:
  - tosca-normative-types:1.0.0-SNAPSHOT

description: >
  Contains the non-normative definition of Docker-related types as
  currently supported in Alien 4 Cloud.

artifact_types:
  tosca.artifacts.Deployment.Image.Container.Docker:
    description: Docker Container Image
    derived_from: tosca.artifacts.Deployment.Image

node_types:
  tosca.nodes.Container.Application.DockerContainer:
    abstract: true
    derived_from: tosca.nodes.Container.Application
    description: >
      The TOSCA Container Application Docker node represents an application running in a Docker container.
      Properties defined in the node will be interpreted as the entrypoint's arguments.
    tags:
      icon: /images/docker.png
    properties:
      cpu_share:
        type: float
        required: true
        default: 1.0
      mem_share:
        type: scalar-unit.size
        required: true
        default: 128 MB
        constraints:
          - greater_or_equal: 0 MB
      disk_share:
        type: integer
        required: false
      docker_options:
        type: map
        required: false
        entry_schema:
          description: Arbitrary command-line options for the docker run command.
          type: string
      docker_run_args:
        type: list
        required: false
        entry_schema:
          description: Docker run arguments. Allows safe usage of Docker ENTRYPOINT statement in the Dockerfile.
          type: string
      docker_run_cmd:
        type: string
        required: false
        description: Docker run command. Will override the Dockerfile CMD statement.
      docker_env_vars:
        type: map
        required: false
        entry_schema:
          description: Environment variables for the Docker container.
          type: string
    attributes:
      endpoint:
        type: string
        description: >
          Reflects the external endpoint assigned to this container.
    capabilities:
      attach: alien.capabilities.DockerVolumeAttachment
      scalable: tosca.capabilities.Scalable
    requirements:
      - host:
          capability: tosca.capabilities.Container.Docker
          relationship: tosca.relationships.HostedOn
          occurrences: [0, 1]
  alien.nodes.DockerExtVolume:
    derived_from: tosca.nodes.BlockStorage
    tags:
      icon: /images/volume.png
    properties:
      volume_name:
        type: string
        description: Name of the volume.  If it does not exist, it is created implicitly. Otherwise, the existing volume is reused.
        required: true
      device:
        type: string
        required: false
        default: ""
    requirements:
      attachment:
        capability: alien.capabilities.DockerVolumeAttachment
        relationship: alien.relationships.MountDockerVolume

capability_types:
  tosca.capabilities.Container.Docker:
    derived_from: tosca.capabilities.Container
    description: >
      The capacity to host and run Docker containers.
  alien.capabilities.endpoint.Docker:
    derived_from: tosca.capabilities.Endpoint
    description: >
      Endpoint generic capability for a Docker container, allowing implementation
      of Docker bridge networking.
    properties:
      docker_bridge_port_mapping:
        type: integer
        description: Port used to bridge to the container's endpoint.
        default: 0
  alien.capabilities.DockerVolumeAttachment:
    derived_from: tosca.capabilities.Attachment
    description: >
      Capability to mount a Docker volume
    valid_source_types: [ alien.nodes.DockerExtVolume ]

relationship_types:
  alien.relationships.MountDockerVolume:
    derived_from: tosca.relationships.AttachTo
    valid_target_types: [ alien.capabilities.DockerVolumeAttachment ]
    properties:
      container_path:
        type: string
        required: true
        description: Specifies where the volume is mounted inside the container.
